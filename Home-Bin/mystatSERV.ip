#!/bin/bash
#
#####################################################################
#
# Script Name  : mystat.sh v.1.2.1
# Description  : Displays System and IP Network information
# Dependencies : awk, ip, nmcli, wget, dmidecode, awk, grep, hdpram, lsblk, inxi
# Arguments    : None
# Author       : Bruce E. Scott, 03 Jun 2019
# Email        : bescott9944@gmail.com
# Linux Form   : I can be reached at https://www.ezeelinux.com/talk/index.php (bescott9944)
# Comment 1.   :v.0.3 script concept and building.. Current Version is v.1.2.1 -Bruce - 10/17/2019
# Comment 2.   : Requires root/sudo privileges
# Note         : dmidecode may produce error messages in some systems. They can be
#                safely ignored and removed from file with any text editor.
#
#####################################################################
# Copyright (C) 2019, Bruce E. Scott
############################################
#
# This script was created using other scripts and commands that I added
# to get to more system Information. This script should be in the ~/bin...
# mystat.sh - This file - Copyright (C) 2019, by Bruce E. Scott
#
###########################################
#
# A BIG Thanks goes out to Richard Romig for his 2 scripts.
# Mystats.sh is based on these...
# sysinfo.sh    # The 2 scripts were written and
# ipinfo.sh     # Copyright (C) in 2018 by Richard Romig
#		        # Email: rick.romig@gmail.com
#
# A BIG Thanks goes out to Leon.P for his Hdd Function for the script.
# The function list all the hard drives and there information for the output
# for the script.... Thank You very Much!! Leon.P
# He can be reached at https://www.ezeelinux.com/talk/index.php
# Web: https://leon-plickat.org/
#
###########################################
# 05/10/19
# inxi -c0 -Fxzd
# I added the "inxi -c0 -Fxzd" command to get another set information that has the Mobo
# --Bruce
############################################
#
# I pulled all the commands from the 2 above "Snippet Scripts" which do most of the work 
# and I add my own to make up this full script. This script displays the information on screen
# and a file in your /home/your-name under the name of the system "XXXXX.stat"...
# I merged all the scripts and commands to make it all work... :D --Bruce E. Scott
#
############################################
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.
####################################################################
# v.1.0.1 Change log. 6/14/19
# Added new commands for the IP. Inxi, and document updates. Fixed bugs in the command
# structure. Various other small changes and fixes....
# 6/14/19 added the path to "inxi" so that it would not rely on the $PATH
# to function... -Bruce
#----------------------------------------
# v1.0.2 change log. 6/16/19
# Hard drive function section added today!
# A BIG Thanks goes out to Leon.P for his Hdd Function for the script.
# The function list all the hard drives and there information for the output
# for the script.... Thank You very Much!! Leon.P
# The inxi section is still flacky... -Bruce
#----------------------------------------
# v1.0.3 Change log. 6/17/19
# Added more Computer Information variables and commands so that 
# the board info is pilled with dmidecode command. Created new output
# variables for the information so that is can be displayed on the screen.
# I added the same for the Bios/vender too..
# --> Note:  On some Distro's "hdpram" is not installed by default.
# You will have to install it for this section to function... 
# still dealing with inxi not always working on various Distros --Bruce E. Scott
#----------------------------------------
# v1.0.3 Change log. 7/04/19
# Made several changes today. I moved all the variables to the top o the script
# for similarity.
# I have found that for some reason this script will not run in a folder that is
# in the $PATH statement on MX & Manjaro Arch Distro's. Works fine on other Debian/Ubuntu Distro's...
# Someday I will figure it out. I is a issue with "INXI". In the script and in the $PATH, the 
# script gets stuck in a loop on the "INXI" command in the script and will run until the
# system crashes..... One has to use the key combo "Ctrl + C" to exit the script... -Bruce
#----------------------------------------
# v1.0.3 Update log 8/11/19
# Manjaro and MX Linux sometimes has issues running the inxi
# command at times. Sometimes it works and sometime it hangs on inxi
# and starts to eat CPU time and Memory until the system will crash!
# You will have to watch and see if the screen hangs for along time
# at a blank screen with a flashing cursor! Amy more that 5 seconds
# you will have to hit the " CTRL + C " to stop the script!
# I have not figured it out yet... -Bruce
#----------------------------------------
# v1.0.3 Change log. 8/18/19
# Finely give up a week ago and made a ~/home/bin/info to store
# the main Mystat-system_name file and place a mystat like mystatMX or mystatDF for Defiant
# this is the only thing I know to do as INXI is still hanging on every Distro but Mint 18.3...
# I did this on all the box's till I get the $PATH issue sorted out, So far
# the Ezeetalk forum has been stumped too! --Bruce
#----------------------------------------
# v1.0.3 Change Log. 8/18/19 - 8/19/19
# Deck_luck on EzeeTalk.com offered some of his time to help fix the INXI hanging in a loop.
# He's trying to figure out the issue!
# I sent Deck_luck the master script and all the information on all the Distro's
# with there Version numbers for INXI. Also sent all the .bashrc's from all of the Distro's...
# Thanks Deck_luck! -Bruce
#----------------------------------------
# v1.0.3 Change Log. 8/20/19
# On 8/20/19 Deck_luck on EzeeTalk.com came up with this small script that fix's
# the INXI command from hanging and getting caught in a loop on any INXI v2.3.x.x-00
# or higher! There is a bug in the newer versions that keep calling the parent --version.
# Deck_luck sent a bug report tot he Dev and the Dev said that it was a "child corner bug"
# and closed the bug report even after Deck_luck sent his the process, scripts, the fix and the
# Dev is a bit of a but...
# Thank you Deck_luck for your time and the fix! -Bruce
#----------------------------------------
# v1.0.3 Change log. 8/25/19
# After several days of testing the Mystat script with Deck_luck's fix for the INXI
# hanging issues and further testing on all the Distro's I have on Hardware, also on some
# VM's I can say that is is fixed and works as intended... The script has been tested on
# Mint 18.3 - 19.2, Manjaro, Linux-MX, Peppermint 10 as well sever Disto's in VM's.... -Bruce
#----------------------------------------
# v1.0.3 Change log. 8/26/19
# I have decided to raise the Version Number to v1.2.0....
# I do not see any issues at this time..... -Bruce
#----------------------------------------
# v1.2.1 Change Log 10/17/2019
# I Split the AWK command into 2 AWK commands to get
# better Gatway and Adaptor information for the Network...
# I Added the "AWK Output" to the Netwotk Section to change the IP Router Information
# I also added NEW "Other HDD Information:" to get more HDD information
# also Added VENDOR, UUID information to the"lsblk" to the Harddrive Section...
# Also added the "df -h" to the Harddrive Information Section for more information...
###
# I also made a bunch of Line and Display output Changet so that
# the STDOUT look better. Verson Number updated too...   -Bruce
#----------------------------------------
# v.1.2.2 Change Log 10/19/19
#
####################################################################

# Set BASH to quit script and exit on errors:

 set -e
#
  echo
  echo  "<---====********************************====--->"
  echo " <:>" "Hello, I'm The HAL-9000 Computer."
  echo " <:>" "I will be Processing Your Information today"
  echo " <:>"   "Please Hold this will take a Bit" " Thank You!"
  echo
  echo " <:>" "We May Need You Password" "$USER"
  echo " <:>"  "I am Checking......."
  echo " <:>"  "Yes we need your password.. Please Enter It Now!......."
  echo -e  "<---====********************************====--->"
#
# Base variables
#
myuser=$USER
myhost=$HOSTNAME
infofile="/home/$myuser/$myhost.stat"
today=$(date +"%d %B %Y %H:%M:%S")
#
# Checking for sudo permissions:

sudo ls > /dev/null

# Computer information

biov=$(sudo /usr/sbin/dmidecode -s bios-vendor 2>/dev/null)
biodate=$(sudo /usr/sbin/dmidecode -s bios-release-date 2>/dev/null)
mfgname=$(sudo /usr/sbin/dmidecode -s system-manufacturer 2>/dev/null)
prodname=$(sudo /usr/sbin/dmidecode -s system-product-name 2>/dev/null)
vername=$(sudo /usr/sbin/dmidecode -s system-version 2>/dev/null)
sernum=$(sudo /usr/sbin/dmidecode -s system-serial-number 2>/dev/null)
bmfgname=$(sudo /usr/sbin/dmidecode -s baseboard-manufacturer 2>/dev/null)
bprodname=$(sudo /usr/sbin/dmidecode -s baseboard-product-name 2>/dev/null)
bvername=$(sudo /usr/sbin/dmidecode -s baseboard-version 2>/dev/null)
bsernum=$(sudo /usr/sbin/dmidecode -s baseboard-serial-number 2>/dev/null)

# RAM and CPU

physmem=$(grep MemTotal /proc/meminfo | awk '{print $2}' | xargs -I {} \
echo "scale=4; {}/1024^2" | bc)
cpuinfo=$(grep 'model name' /proc/cpuinfo | uniq | cut -c 14-)

# Network
# Updated to use IP a in place of nmCLI which was removed from Ubuntu 20.04
ethint=$(ip a | grep 'enp' | awk '/<BROADCAST,/ {print $2}' | sed 's/://g')
wifiint=$(ip a | grep 'wl' | awk '/<BROADCAST,/ {print $2}' | sed 's/://g')

# ethint=$(nmcli dev | awk '/ethernet/ {print $1}')
# wifint=$(nmcli dev | awk '/wifi/ {print $1}')

#    **** ethint=$(nmcli dev | awk '/ethernet/ {print $1}')
#    **** wifint=$(nmcli dev | awk '/wifi/ {print $1}')


#    ethint=$(nmcli con show --active | grep 'ethernet' | awk '{print $6}')
#############
#
# 6/14/19 changed the ("nmcli dev" an "print $1" to $6) so it would read
# "Active" Nic cards in a 2 Nic card system.....
# ethint=$(nmcli dev | grep 'ethernet' | awk '{print $1}')
#
############
#   wifint=$(nmcli dev | grep 'wifi' | awk '{print $6}')
# wifint=$(nmcli dev | grep 'wifi' | awk '{print $1}') ##  Changed the $1 to $6...
ethernet=$(/usr/bin/lspci | grep 'Ethernet controller' | cut -c 30-)
wireless=$(/usr/bin/lspci | grep 'Network controller' | cut -c 29-)
#
# IP addresses

publicip=$(wget -qO- http://ipv4.icanhazip.com)
localip1=$(ip -o -f inet addr show | awk -v name="$ethint" '$0~name {print $4}')
localip2=$(ip -o -f inet addr show | awk -v name="$wifint" '$0~name {print $4}')


# Write data to file in user's home directory

clear
  echo   "<---====******************************====--->
Mystat.sh, v.0.3 created on 10/17/2019 Copyright 2019, Bruce E. Scott
SysInfo, Copyright 2019, Richard Romig....
Current Version: v.1.2.2 Modified by Bruce Scott 10/19/19" > "$infofile"
  echo
{
  echo 
  echo -e "============"
  echo -e "File created: $today"
  echo -e "============\n"
#
  echo -e "<###******************************###>\n"
  echo -e "System information for $myhost:\n"
  echo -e "<###******************************###>"
#
  echo -e "\n============"
  echo "Bios Information:"
  echo -e "============"
  echo "Bios Manufacturer: $biov"
  echo "Bios Release Date: $biodate"
#
  echo -e "\n============"
  echo "System Information:"
  echo -e "============"
  echo "System Manufacturer: $mfgname"
  echo "System Product Name: $prodname"
  echo "System Version: $vername"
  echo "System Serial Number: $sernum"
  echo -e "============"
#
  echo -e "\n============"
  echo "Board Information:"
  echo -e "============"
  echo "Board Manufacturer: $bmfgname"
  echo "Board Product Name: $bprodname"
  echo "Board Version: $bvername"
  echo "Board Serial Number: $bsernum"
#
  echo -e "\n============"
  echo -e "Distro OS: $(/usr/bin/lsb_release -d | cut -c 14-)"  # Changed to "OS" to "Disto OS" to get info in the $infofile. 6/14/19 -bruce.
  echo -e "Codename: $(/usr/bin/lsb_release -c | cut -c 11-)"   # Added to get Codename 6/14/19 -bruce.
  echo -e "Release: $(/usr/bin/lsb_release -r | cut -c 10-)"  # Added to get Release 6/14/19 -bruce.
  echo -e "============"
#
  echo -e "\n============" 
  echo "CPU:
============
    $cpuinfo"
#
  echo -e "\n============"
  echo "RAM:
============
    $physmem GB"
# 
 echo -e "\n============"
  echo "Graphics Adapter: "
  echo -e "============"
  echo -e "\t$(/usr/bin/lspci | grep 'VGA' | cut -c 36-)"
#
# Network Interfaces Section
#
  echo -e "\n============"
  echo "Network Adapters:"
  echo -e "============"
 if [ -n "$ethernet" ]; then
   echo -e "\tEthernet:"
	echo -e "\tPort Name: $ethint"
	echo -e "\tNic Card: $ethernet"
#   echo -e "\tEthernet: $ethint = $ethernet"
#    read -r ethadd < "/sys/class/net/enp3s10/address"
    read -r ethadd < "/sys/class/net/$ethint/address"
    echo -e "\tMAC Address: $ethadd"
 fi
if [ -n "$ethint" ] && [ -n "$localip1" ]; then
  echo -e "\tEthernet Address: $localip1"
elif [ -n "$ethint" ]; then
  echo -e "\tEthernet Cable: Not connected\n"
fi
#
# Wirless Wifi Section
#
  if [ -n "$wireless" ]; then
    echo -e "\n============"
    echo -e "Wireless Information:"
    echo -e "============"
    echo -e "\tWireless:"
    echo -e "\tPort Name: $wifint"
    echo -e "\tNic Card: $wireless"
    read -r wifiadd < "/sys/class/net/$wifint/address"
    echo -e "\tMAC Address: $wifiadd"
  fi
if [ -n "$wifint" ] && [ -n "$localip2" ]; then
  echo -e "\tWireless Ethernet: $localip2"
elif [ -n "$wifint" ]; then
  echo -e "\tWireless Ethernet: Not connected\n"
fi
#
#
####
#
#    Added the "IP Route" to get Nic card Information...
#
  echo -e "\n============"
  echo -e "IP Route Inforomation:" # Added this to get more Nic Information. 6/14/19 -bruce.
  echo -e "============"
#	/usr/bin/ip route
#   /sbin/ip route
  /sbin/ip route | awk '/default/ "\t"{print}'  #--=== #### NOTE: I Added the "AWK Output" to change
                                                       #### the IP Router Information on 10/17/2019  -Bruce
#  If your "IP" is not in the /sbin/ip. Then uncomment the above
#  "/usr/bin/ip route" line. Then add a line "#" comment to the /sbin/ip/route
#  Solus 4.0, Mint 18.3 keeps their "IP" in the "/sbin"... -Bruce
#
#
# Display IP Information
  echo -e "\n=============="
  echo -e "IP Information:"
  echo "=============="
  echo -e "\tPublic IP:"
  echo -e "\t$publicip\n"
#
  echo -e "\tLocal IP:"
if [ -n "$ethint" ] && [ -n "$localip1" ]; then
  echo -e "\tEthernet:
     $localip1\n"
elif [ -n "$ethint" ]; then
  echo -e "\tEthernet: Not connected\n"
fi
#
if [ -n "$wifint" ] && [ -n "$localip2" ]; then
  echo -e "\tWireless: $localip2"
elif [ -n "$wifint" ]; then
  echo -e "\tWireless: Not connected\n"
fi
  echo -e "\tDefault Gateway:"
 /sbin/ip route | awk '/default/ {print "\t"$3}'
  echo -e "\n\tEthernet Adaptor ID:"                   ### NOTE: Split the AWK command into 2 AWK commands to get
 /sbin/ip route | awk '/default/ {print "\t"$5}'    ### better Gatway and Adaptor information on 10/17/2019  -Bruce
# /sbin/ip route | awk '/scope/ {print "\t"$9}'
#   Change this "/sbin/ip" to "/bin/ip"
#   for your system if needed. "type: whereis ip on CLi" -bruce
  echo
  echo -e "\tDNS Servers:"
# /usr/bin/nmcli dev show | awk '/IP4.DNS/ {printf "\t%s\n",$2}' ?????
# Replaced nmCLI with IP Route as nmCLI was removed from Ubuntu Server 20.04 05-26-2021
ip route | awk '/default/ {printf "\t%s\n",$3}'
# /usr/bin/nmcli dev show | awk '/IP4.GATEWAY/ {printf "\t%s\n",$2}'
#
# Hard drive
#    Note: On some Distro's "hdpram" is not installed by default.
#    You will have to install it for this section to function... -Bruce E. Scott -6/18/19
  echo -e "============"
#  fi
echo -e "Hard Disk Information:"
  echo -e "============"
   for Disk in /dev/sd[a-z]
do

    hdmodel=$(sudo /sbin/hdparm -I "${Disk}" | grep 'Model Number' | cut -c 22-)
    hdserial=$(sudo /sbin/hdparm -I "${Disk}" | grep 'Serial Number' | cut -c 22-)
    hdsize=$(sudo /sbin/hdparm -I "${Disk}" | grep 'GB' | cut -c 38-)
    firm=$(sudo /sbin/hdparm -I "${Disk}" | grep 'Firmware Revision' | cut -c 22-)

    echo -e "\tModel Number: $hdmodel"
    echo -e "\tSerial Number: $hdserial"
    echo -e "\tCapacity: $hdsize"
    echo -e "\tFirmware Revision: $firm \n"

done
### Note: Added "Other HDD Information:" to get more HDD information on 10/17/2019  -Bruce
  echo -e "\n============"
  echo -e "Other HDD Information:"
  echo -e "============"
    df -h     >> "$infofile"
####
  echo -e "\n============"
  echo -e "Partition Information:"
  echo -e "============"
    /bin/lsblk -o NAME,SIZE,TYPE,MOUNTPOINT,VENDOR,UUID  #### NOTE: Added VENDOR, UUID information to the"lsblk" on 10/17/2019  -Bruce
##
# Battery Interfaces
# I fixedS
  if  
    [ "$(ls -A /sys/class/power_supply/)" ]; then
  echo -e "\n============"
  echo -e "Battery Information:"
  echo -e "============"
#    echo -e "Charging Power:"
    echo -e "\nPower and battery:"
    ls -1 /sys/class/power_supply
  fi
####
#
 echo -e "\n============"
 echo -e "Inxi - System Data Information:"
 echo "================"
#
#   On 8/20/19 Deck_luck on EzeeTalk.com came up with this small script that fix's
#   the INXI command from hanging and getting caught in a loop on any INXI v2.3.x.x-00
#   or higher! There is a bug in newer versions that keep calling the parent --version.
#   Thank you Deck_luck for your time and the fix! -Bruce
#
if [[ "${1}" == "--version" ]] ; then
	# patch for inxi_3.0.32 parent --version anomaly Per Deck_luck 8/20/19
	exit 1
fi
#
# /usr/bin/inxi -c0 -Fxzd
  inxi -c0 -Fxzd
#
 echo "================"
 echo
 echo " <:>" "The data's being retrieved "$USER"!!" "One Moment..."
 echo " <:>" "I Found The Data You Requested"
 echo
 echo " <:>" "Here Is The Data For "$HOSTNAME"'s"" System Information You Wanted....."
 echo " <:>" "Thank You For Using Your Hal-9000 Computer"
 echo " <:>" "Goodbye $USER!"
 echo "=============="
} >> "$infofile"
#
cat "$infofile"
exit
