#!/usr/bin/env bash

#------------------------------------------------------------------------------
# Project Name      - end-info-v3
# Started On        - Tue 14 Sep 12:44 p.m. EST 2020
# Last Change       - Sun 01 Aug  12:15 p.m. EST 2021
# Author E-Mail     - bescott9944@gmail.com
# Author GitHub     - https://github.com/bescott9944
# Auther Gitlab     - https://gitlab.com/bescott9944
#------------------------------------------------------------------------------
# Bash version 4.0 or greater is required.
#------------------------------------------------------------------------------
#
###################################################################################
# This script uses lsb_release, lscpu, and glxinfo. make sure they are installed. #
###################################################################################
#
# Done al lot of changes that wer not documented but hay it is working... -Bruce
#
# Added the newer GTK Theme line to better get the name of the theme. 8/1/2021
#
# START OF SCRIPT
#
# Saved
#----- Removes items that were updated but saving old for refference
# wm_theme="$(gsettings get org.cinnamon.desktop.wm.preferences theme)" --> ${c7}$wm_theme
# CPU="$(lscpu | grep Model\ name | sed 's/name:\ //' | sed "s/([^)]*)/()/g" | sed 's/[)(]//g')"
# OS1="$(lsb_release -si)"
# LOCALIP=$(echo -e "${COLOR_INFO}Local IP\t${COLOR_HL}$LOCALIP${NC}")
# EXTERNALIP=$(echo -e "${COLOR_INFO}External IP\t${COLOR_HL}$EXTERNALIP${NC}")

clear ; clear

# Universal variables
user="${USER}\e[33m@"
Desktop="${XDG_CURRENT_DESKTOP}"
Kernel="$(uname -sr)"
Uptime="$(uptime -p | sed 's/up //')"
Shell="$(basename "$SHELL")"
CPU=$(grep 'model name' /proc/cpuinfo | uniq | cut -c 14-)
GPU="$(/usr/bin/lspci | grep 'VGA' | cut -c 65-)"
gtktheme="$(grep gtk-theme-name ~/.config/gtk-3.0/settings.ini | sed 's/gtk-theme-name=//')"
RAM="$(free -h | awk '/^Mem:/ {print $3 " / " $2}')"
OS="$(lsb_release -sirc)"
Uptime="$(uptime -p | sed 's/up //')"
Packages="$(pacman -Q | wc -l)"
## LOCAL IP
LOCALIP=$(ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p')
## EXTERNAL IP
EXTERNALIP=$(dig +short myip.opendns.com @resolver1.opendns.com)

if [ -z "${WM}" ]; then
	if [ "${XDG_CURRENT_DESKTOP}" ]; then
		envtype='Desktop'
		WM="${XDG_CURRENT_DESKTOP}"
	elif [ "${DESKTOP_SESSION}" ]; then
		envtype='Desktop'
		WM="${DESKTOP_SESSION}"
	else
		envtype='WM'
		WM="$(tail -n 1 "${HOME}/.xinitrc" | cut -d ' ' -f 2)"
	fi
else
	envtype='WM'

fi

# colors
 c1="\e[31;1m" # Red
 c2="\e[32m" # Light Green
 c3="\e[33m" # Yellow
 c4="\e[34m"  # Calm Blue
 c5="\e[35;1m" # Violet
 c6="\e[36m" # Arch Blue
 c7="\e[37m" # White
 c8="\e[38m" # Sky Blue
 c9="\e[39m" # Light Grey
 c10="\e[30m" # Dark Grey
 c20="\e[0m" # Normal
 c21="\e[0;94m" # High Intenisty Blue

# Package count for Debian based systems
Packages_dpkg(){
         
         Packages="$(dpkg -l | grep -c ^i)"
}

# Package count for Arch based systems
Arch_Packages(){

         Packages="$(pacman -Qs | wc -l)"

}

# An Error echo wrapper
err0r()
{

    echo >&2 "$(tput bold; tput setaf 1)[-] ERROR: ${*}$(tput sgr0)"
    echo ""
    exit 86
}

# A Warning echo wrapper
warn()
{
 echo >&2 "$(tput bold; tput setaf 3)[!] WARNING: ${*}$(tput sgr0)"
 echo ""
}

# A Message echo wrapper
msg()
{
 echo "$(tput bold; tput setaf 2)[+] ${*}$(tput sgr0)"
}
echo -e "${c21}                            " "${c3}     ______          __                                  ____  _____ "
echo -e "${c21}                            " "${c3}    / ____/___  ____/ /__  ____ __   ______  __  _______/ __ \/ ___/ "           
echo -e "${c1}                      ${c5}|${c20}^^   " "${c3}   / __/ / __ \/ __  / _ \/ __ /| | / / __ \/ / / / ___/ / / /\__ \  "           
echo -e "${c1}                    ./${c5}o${c21}.    " "${c3}  / /___/ / / / /_/ /  __/ /_/ /| |/ / /_/ / /_/ / /  / /_/ /___/ /  "
echo -e "${c1}                   ./${c5}sssso${c21}- " "${c3} /_____/_/ /_/\__,_/\___/\__,_/ |___/\____/\__,_/_/   \____//____/   "
echo -e "${c1}                 .:${c5}osssssss${c21}+- " "${c3}   ------------------------------------------------------ V3        "
echo -e "${c1}               .:+${c5}sssssssssso${c21}/.          "  ${c6}Logged In: ${c7}${user}${c7}$(hostname)
echo -e "${c1}             .-/${c5}ossssssssssssso${c21}/.        "  ${c6}OS: ${c7}$OS
echo -e "${c1}           .-/+${c5}sssssssssssssssso${c21}+:*      "  ${c6}$envtype: ${c7}$WM
echo -e "${c1}         .-:/+${c5}sssssssssssssssssso${c21}+/.     "  ${c6}Theme: ${c7}$gtktheme
echo -e "${c1}       ..://${c5}osssssssssssssssssssso${c21}++-    "  ${c6}Kernel: ${c7}$Kernel
echo -e "${c1}      .://+${c5}ssssssssssssssssssssssso${c21}++:   "  ${c6}Shell: ${c7}$Shell
echo -e "${c1}    .:///${c5}ossssssssssssssssssssssssso${c21}++:  "  ${c6}CPU: ${c7}$CPU
echo -e "${c1}  *:////${c5}ssssssssssssssssssssssssssso${c21}+++. "  ${c6}GPU: ${c7}$GPU
echo -e "${c1}*-////+${c5}ssssssssssssssssssssssssssso${c21}++++- "  ${c6}RAM: ${c7}$RAM
echo -e "${c1} *..-+${c5}oosssssssssssssssssssssssso${c21}+++++/^ "  ${c6}Packages: ${c7}$Packages
echo -e "${c1}   ./${c6}++++++++++++++++++++++++++++++${c21}/:.   "  ${c6}Uptime: ${c7}${Uptime}${reset} 
echo -e "${c6}  *:::::::::::::::::::::::::------^^     "  ${c6}Local Net IP: ${c7}$LOCALIP
echo -e "${c21}  .\`:::::::::::::::::::::::------^^      " ${c6}External IP: ${c7}$EXTERNALIP
echo -e "${c21}                                         "  
echo -e "${c21}                                         "  
#echo ""

